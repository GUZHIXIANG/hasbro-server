# Generated by Django 2.2.7 on 2020-02-17 14:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=255, unique=True, verbose_name='活动名')),
                ('activity_descripation', models.TextField(blank=True, verbose_name='活动描述')),
                ('activity_start_datetime', models.DateTimeField(auto_now_add=True, verbose_name='活动开始时间')),
                ('activity_end_datetime', models.DateTimeField(auto_now_add=True, verbose_name='活动结束时间')),
                ('activity_create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('activity_operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': '活动信息表',
            },
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=16, unique=True, verbose_name='活动类型')),
            ],
            options={
                'verbose_name': 'ActivityType',
                'verbose_name_plural': '活动类型表',
            },
        ),
        migrations.CreateModel(
            name='ProductBaseInfo',
            fields=[
                ('productId', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('productName', models.CharField(max_length=255)),
                ('systemCode', models.BigIntegerField(blank=True)),
                ('barCode', models.BigIntegerField(blank=True)),
                ('color', models.CharField(blank=True, max_length=255)),
                ('norms', models.CharField(blank=True, max_length=255)),
                ('weight', models.IntegerField(blank=True)),
                ('price', models.IntegerField()),
                ('description', models.TextField(blank=True)),
                ('brief', models.TextField(blank=True, default='这里是商品简介')),
                ('brand', models.TextField(blank=True, default='这里是商品牌')),
                ('smallurl', models.CharField(default='', max_length=255)),
                ('shell', models.CharField(choices=[('on', '上架'), ('off', '下架')], default='on', max_length=3)),
                ('quantity', models.IntegerField(default=500)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeName', models.CharField(max_length=50, unique=True, verbose_name='商品大类')),
                ('typeChildName', models.CharField(default='子分类产品', max_length=50, verbose_name='商品子分类')),
            ],
            options={
                'verbose_name': '产品分类',
                'verbose_name_plural': '产品分类',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=255, unique=True, verbose_name='门店名')),
                ('store_address', models.TextField(blank=True, verbose_name='门店地址')),
                ('store_area', models.CharField(blank=True, max_length=100, verbose_name='门店商区')),
                ('store_telephone', models.CharField(blank=True, max_length=100, verbose_name='门店电话')),
                ('store_longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True, verbose_name='门店经度')),
                ('store_latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True, verbose_name='门店纬度')),
                ('store_create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('store_operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': '门店信息表',
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('productbaseinfo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='wechatapp.ProductBaseInfo')),
                ('tag', models.CharField(choices=[('h', 'hot'), ('d', 'discount'), ('n', 'new')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unionid', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='unionid')),
                ('nickName', models.CharField(max_length=100, verbose_name='nickName')),
                ('gender', models.SmallIntegerField(choices=[(0, '女'), (1, '男')], default=1, verbose_name='性别')),
                ('avatarUrl', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='头像')),
                ('phone', models.BigIntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=64)),
                ('province', models.CharField(blank=True, max_length=64)),
                ('city', models.CharField(blank=True, max_length=64)),
                ('language', models.CharField(blank=True, max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户微信注册信息详情表',
            },
        ),
        migrations.CreateModel(
            name='ProductUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255)),
                ('productbaseinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url', to='wechatapp.ProductBaseInfo')),
            ],
        ),
        migrations.AddField(
            model_name='productbaseinfo',
            name='productType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wechatapp.ProductType'),
        ),
        migrations.CreateModel(
            name='MyTrolly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nums', models.IntegerField(default=1)),
                ('checkbox', models.IntegerField(choices=[('0', '未选中'), ('1', '选中')], default='0')),
                ('productbaseinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='wechatapp.ProductBaseInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userid', to='wechatapp.UserProfile')),
            ],
            options={
                'verbose_name': 'MyTrolly',
            },
        ),
        migrations.CreateModel(
            name='ActivityStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Activity')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Store')),
            ],
            options={
                'verbose_name': 'ActivityStore',
                'verbose_name_plural': '活动门店关联表',
            },
        ),
        migrations.CreateModel(
            name='ActivityImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.URLField(max_length=250, verbose_name='活动图片')),
                ('image_type', models.IntegerField(choices=[(1, 'type1'), (2, 'type2'), (3, 'type3')], default=1, verbose_name='图片类型')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_image', to='wechatapp.Activity')),
            ],
            options={
                'verbose_name': 'ActivityImage',
                'verbose_name_plural': '活动图片表',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='activity_store',
            field=models.ManyToManyField(related_name='activity_store', through='wechatapp.ActivityStore', to='wechatapp.Store'),
        ),
        migrations.AddField(
            model_name='activity',
            name='activity_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.ActivityType'),
        ),
        migrations.AddField(
            model_name='activity',
            name='super_activity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Activity'),
        ),
    ]
