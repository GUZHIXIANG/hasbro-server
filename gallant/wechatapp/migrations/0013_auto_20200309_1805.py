# Generated by Django 2.2.7 on 2020-03-09 18:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    dependencies = [
        ('wechatapp', '0012_auto_20200307_1818'),
    ]

    operations = [
        migrations.CreateModel(
            name='PTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='标签名称')),
                ('description', models.CharField(max_length=100, verbose_name='标签描述')),
            ],
            options={
                'verbose_name': '商品标签*',
                'verbose_name_plural': '商品标签管理*',
            },
        ),
        migrations.CreateModel(
            name='PType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='类型')),
                ('desc', models.IntegerField(blank=True, choices=[(1, '一级分类'), (2, '二级分类'), (3, '三级分类')], verbose_name='属性')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('operate_time', models.DateTimeField(auto_now=True, verbose_name='操作时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.PType', verbose_name='父类型')),
            ],
            options={
                'verbose_name': '商品类型*',
                'verbose_name_plural': '商品类型管理*',
            },
        ),
        migrations.CreateModel(
            name='PTypeImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', stdimage.models.StdImageField(default='', upload_to='PTypeImage', verbose_name='图片路径')),
                ('ptype', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='type_image', to='wechatapp.PType', verbose_name='商品类型')),
            ],
            options={
                'verbose_name': '商品类型图标*',
                'verbose_name_plural': '商品类型图标管理*',
            },
        ),
        migrations.AlterModelOptions(
            name='activity',
            options={'verbose_name': '活动信息', 'verbose_name_plural': '活动信息管理'},
        ),
        migrations.AlterModelOptions(
            name='activityimage',
            options={'verbose_name': '活动图片', 'verbose_name_plural': '活动图片管理'},
        ),
        migrations.AlterModelOptions(
            name='activitytext',
            options={'verbose_name': '活动文本', 'verbose_name_plural': '活动文本管理'},
        ),
        migrations.AlterModelOptions(
            name='activitytype',
            options={'verbose_name': '活动类型', 'verbose_name_plural': '活动类型管理'},
        ),
        migrations.AlterModelOptions(
            name='signup',
            options={'verbose_name': '报名信息', 'verbose_name_plural': '报名信息查看'},
        ),
        migrations.AlterModelOptions(
            name='store',
            options={'verbose_name': '门店信息', 'verbose_name_plural': '门店信息管理'},
        ),
        migrations.AlterField(
            model_name='activity',
            name='activity_end_datetime',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='结束时间'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='activity_start_datetime',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='开始时间'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='activity_store',
            field=models.ManyToManyField(blank=True, null=True, to='wechatapp.Store', verbose_name='活动门店'),
        ),
        migrations.AlterField(
            model_name='activitytype',
            name='type_description',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='类型描述'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='barCode',
            field=models.BigIntegerField(blank=True, verbose_name='条形编码'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='brand',
            field=models.TextField(blank=True, default='这里是商品牌', verbose_name='品牌'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='brief',
            field=models.TextField(blank=True, default='这里是商品简介', verbose_name='商品简介'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='color',
            field=models.CharField(blank=True, max_length=255, verbose_name='颜色'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='description',
            field=models.TextField(blank=True, verbose_name='商品详情'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='norms',
            field=models.CharField(blank=True, max_length=255, verbose_name='规格'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='price',
            field=models.IntegerField(verbose_name='价格'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='productType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wechatapp.ProductType', verbose_name='商品分类'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='quantity',
            field=models.IntegerField(blank=True, default=500, verbose_name='虚拟库存'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='shell',
            field=models.CharField(choices=[('on', '上架'), ('off', '下架')], default='on', max_length=3, verbose_name='货架'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='smallurl',
            field=stdimage.models.StdImageField(blank=True, default='', upload_to='ProductPreViewPic', verbose_name='商品展示缩略图'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='systemCode',
            field=models.BigIntegerField(blank=True, verbose_name='系统编码'),
        ),
        migrations.AlterField(
            model_name='productbaseinfo',
            name='weight',
            field=models.IntegerField(blank=True, verbose_name='重量'),
        ),
        migrations.AlterField(
            model_name='signup',
            name='activity',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Activity', verbose_name='报名活动'),
        ),
        migrations.AlterField(
            model_name='signup',
            name='signup_name',
            field=models.CharField(blank=True, max_length=128, verbose_name='参加者姓名'),
        ),
        migrations.AlterField(
            model_name='signup',
            name='signup_phone',
            field=models.CharField(blank=True, max_length=128, verbose_name='参加者电话'),
        ),
        migrations.AlterField(
            model_name='signup',
            name='store',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='wechatapp.Store', verbose_name='活动门店'),
        ),
        migrations.AlterField(
            model_name='signup',
            name='user',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='报名用户'),
        ),
        migrations.DeleteModel(
            name='ActivityStore',
        ),
        migrations.AddField(
            model_name='ptag',
            name='product',
            field=models.ManyToManyField(blank=True, null=True, related_name='tags', to='wechatapp.ProductBaseInfo', verbose_name='标注商品'),
        ),
    ]
